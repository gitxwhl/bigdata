<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/security
         http://www.springframework.org/schema/security/spring-security.xsd">
    <!-- SpringSecurity配置文件 -->
    <!--
auto-config:表示自动加载SpringSecurity的配置文件
use-expressions：表示使用Spring的EL表达式
-->
    <security:http auto-config="true" use-expressions="true">
<!--        在拦截所有请求之前，匿名访问直接放过-->
        <security:intercept-url pattern="/login.jsp" access="permitAll()" />
        <!--
         拦截资源
         pattern="/**" 拦截所有的资源
         access="hasAnyRole('ROLE_USER')" 表示只有ROLE_USER 这个角色可以访问资源
          -->
        <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')"></security:intercept-url>
<!--        1、login-processing-url="login"  请求路由 2、login-page 默认跳转页面  3、 authentication-failure-url 登录失败跳转页面
 4、always-use-default-target default-target-url 登录成功后跳转的页面
 -->
        <!---认证信息 -->
<!--        <security:form-login login-page="/login.jsp"-->
<!--                             login-processing-url="/login"-->
<!--                             always-use-default-target="true"-->
<!--                             default-target-url="/home.jsp"-->
<!--        />-->
<!--    <security:csrf disabled="true"/>-->
    </security:http>
    <!-- 认证用户信息 -->
    <security:authentication-manager>
<!--        <security:authentication-provider user-service-ref="userServiceImpl"/>-->
        <security:authentication-provider>
            <security:user-service>
<!--                 设置一个账号 zhangsan 密码123 {noop} 表示不加密 具有的角色是  ROLE_USER-->
                <security:user name="zhangsan" authorities="ROLE_USER" password="{noop}123"></security:user>
                <security:user name="lisi" authorities="ROLE_USER" password="{noop}123456"></security:user>
            </security:user-service>
        </security:authentication-provider>
    </security:authentication-manager>
</beans>