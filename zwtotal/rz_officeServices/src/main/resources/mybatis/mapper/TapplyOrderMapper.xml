<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.officeServices.mapper.TapplyOrderMapper">

    <!--提交办公服务用品申请-->
    <insert id="addApplyOrder" parameterType="ApplyOrder">
        INSERT INTO t_apply_order (
            id, orderid, beginpersonid, beginpersonname, begindate, status,demanddep,demanddepid,receiptdate,remark,pictures,
            useinfo,typeid,amountprice,attr2,meeting_name,meeting_person_number
            )
        VALUES (
            #{id}, #{orderId}, #{beginPersonId}, #{beginPersonName}, #{beginDate}, #{status}, #{demandDep}, #{demandDepId}, #{receiptDate},
            #{remark}, #{pictures}, #{useInfo}, #{typeId}, #{amountPrice}, #{attr2}, #{meetingName}, #{meetingPersonNumber}
        )
    </insert>

    <!--查询当前年度预算-->
    <select id="nowYearMoneyData" resultType="java.util.LinkedHashMap">
        SELECT
            ID,
            ORGID,
            ORGNAME,
            MAX_MONEY,
            ADDED_MONEY,
            THEYEAR,
            BEGIN_DATE,
            END_DATE,
            REMARK,
            IS_PAPER,
            OPERATE_TIME
        FROM
            t_dep_budget
        WHERE
            DATE_FORMAT( NOW( ), '%Y-%m-%d' ) &gt;= BEGIN_DATE
            AND DATE_FORMAT( NOW( ), '%Y-%m-%d' ) &lt;= END_DATE
            AND ORGID = #{orgId}
            AND IS_PAPER = #{isPaper}
    </select>

    <!--管理员获取可用余额-->
    <select id="adminUsedData" resultType="java.util.LinkedHashMap">
        SELECT
            IFNULL(SUM(amountprice),0) PRICE,
            demanddepid
        FROM
            t_apply_order
        WHERE
            typeid = #{typeId}
            AND DATE_FORMAT(begindate,'%Y-%m-%d') &gt;= #{beginDate}
            AND DATE_FORMAT(begindate,'%Y-%m-%d') &lt;= #{endDate}
            AND (status='10' OR status='1')
            AND demanddepid = #{demandDepId}
    </select>

    <!--普通用户获取可用余额-->
    <select id="normalUsedData" resultType="java.util.LinkedHashMap">
        SELECT
            IFNULL(SUM(amountprice),0) PRICE,
            demanddepid
        FROM
            t_apply_order
        WHERE
            typeid = #{typeId}
            AND DATE_FORMAT(begindate,'%Y-%m-%d') &gt;= #{beginDate}
            AND DATE_FORMAT(begindate,'%Y-%m-%d') &lt;= #{endDate}
            AND status!='-1'
            AND demanddepid = #{demandDepId}
    </select>

    <!--获取办公物资申请下一节点审批人-->
    <select id="getNextPerson" resultType="java.util.LinkedHashMap">
        SELECT USER_ID,USER_NAME,DEPT_ID,DEPT_NAME FROM t_user WHERE ${sql}
    </select>

    <!--向t_apply_order_approvel表里插入审批记录-->
    <insert id="addApproval" parameterType="ApplyOrderApproval">
        INSERT INTO t_apply_order_approvel (
            id, orderid, status, ROLE_TYPE, create_time,deal_user_id,deal_user_name,step
        )VALUES (
            #{id},#{orderId},#{status},#{roleType},#{createTime},#{dealUserId},#{dealUserName},#{step}
        )
    </insert>

    <!--向物品条目表里插入多条物品-->
    <insert id="addGood" parameterType="ApplyOrderGood">
        INSERT INTO t_apply_order_good (
            relateorderid, goodid, goodno, goodname, goodamount,specs, brand, storeno, unitprice, unit, pictureurl,location
        ) VALUES (
            #{relateOrderId}, #{goodId},#{goodNo},#{goodName},#{goodAmount},#{specs},#{brand},#{storeNo},#{unitPrice},#{unit},#{pictureUrl},#{location}
        )
    </insert>


    <!--审批人查询审批列表-->
    <select id="getApprovalList" resultType="java.util.LinkedHashMap">
        <bind name="DealUserId" value="'%' + dealUserId + '%'"/>
        SELECT
            a.orderid,
            a.`status`,
            CASE a.`status`
            WHEN '-1' THEN '已驳回'
            WHEN '10' THEN '待发放'
            WHEN '11' THEN '待评价'
            WHEN '12' THEN '已评价'
            ELSE '待审批' END state,
            DATE_FORMAT(a.begindate,'%Y-%m-%d %H:%i:%s') begindate,
            a.beginpersonname,
            a.demanddep,
            a.demanddepid,
            DATE_FORMAT(a.receiptdate,'%Y-%m-%d') receiptdate,
            a.attr2,
            a.remark,
            d.deal_user_id,
            d.deal_user_name,
            a.typeid,
            <if test="typeId == '006'.toString()">
            a.amountprice,
            a.meeting_name isPaper,
            a.bhyy,
            </if>
            d.step
            FROM
            t_apply_order a
            Inner JOIN (
        SELECT
            b.*
            FROM
            t_apply_order_approvel b
            INNER JOIN ( SELECT orderid, MAX( step ) step FROM t_apply_order_approvel GROUP BY orderid ) c ON b.orderid = c.orderid
            AND b.step = c.step
            ) d ON a.orderid = d.orderid
        WHERE
            a.typeid = #{typeId}
            AND a.status not in ('-1','10','11','12')
            AND deal_user_id LIKE #{DealUserId}
            <if test="depId != null and depId != ''">
                AND a.demanddepid in (${depId})
            </if>
            limit #{index},#{pageSize}
    </select>

    <!--审批人查询审批列表数量-->
    <select id="getApprovalListCnt" resultType="java.lang.Integer">
        <bind name="DealUserId" value="'%' + dealUserId + '%'"/>
        SELECT
            count(1)
        FROM
            t_apply_order a
            Inner JOIN (
            SELECT
            b.*
        FROM
            t_apply_order_approvel b
            INNER JOIN ( SELECT orderid, MAX( step ) step FROM t_apply_order_approvel GROUP BY orderid ) c ON b.orderid = c.orderid
            AND b.step = c.step
            ) d ON a.orderid = d.orderid
        WHERE
            a.typeid = #{typeId}
            AND a.status not in ('-1','10','11','12')
            AND deal_user_id LIKE #{DealUserId}
            <if test="depId != null and depId != ''">
                AND a.demanddepid in (${depId})
            </if>
    </select>

    <!--通过订单号查询物品明细-->
    <select id="getGoodById" resultType="java.util.LinkedHashMap">
        SELECT goodid,goodname,goodamount,specs,location,unitprice FROM t_apply_order_good WHERE relateorderid = #{orderId}
    </select>

    <select id="getData" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            t_apply_order a
            Inner JOIN (
            SELECT
            b.*
        FROM
            t_apply_order_approvel b
            INNER JOIN ( SELECT orderid, MAX( step ) step FROM t_apply_order_approvel GROUP BY orderid ) c ON b.orderid = c.orderid
            AND b.step = c.step
            ) d ON a.orderid = d.orderid
        WHERE
            a.typeid = #{typeId}
            <if test="dealUserId != null and dealUserId != ''">
                <bind name="DealUserId" value="'%' + dealUserId + '%'"/>
                AND deal_user_id LIKE #{DealUserId}
            </if>
            <if test="depId != null and depId != ''">
                AND a.demanddepid in (${depId})
            </if>
            <if test="status == '0'.toString()">   <!--待审批-->
                AND a.status not in ('-1','10','11','12')
            </if>
            <if test="status == '1'.toString()">   <!--待发放-->
                AND a.status = '10'
            </if>
    </select>

    <!--审批人审批-->
    <update id="approveApply">
        UPDATE t_apply_order a,t_apply_order_approvel b
        SET a.status = #{status}
        <if test="status != '-1'.toString()">
            ,b.remark = #{remark}
        </if>
        <if test="status == '-1'.toString()">
            ,b.back_remark = #{remark},a.bhyy = #{remark}
        </if>
        WHERE
            a.orderid = #{orderId}
            AND b.orderid = #{orderId}
            AND b.step = #{step}
    </update>

    <!--审批通过修改库存信息-->
    <update id="updatePass" parameterType="Tstock">
        UPDATE t_stock
        SET outstore = #{outStore},usableamount = #{usableaMount}
        WHERE id = #{id}
    </update>

    <!--发放库存的列表-->
    <!--<select id="getPassList" resultType="java.util.LinkedHashMap">
        SELECT
            a.demanddepid,
            a.orderid,
        CASE
            a.status
            WHEN '11' THEN '已发放'
            WHEN '10' THEN '待发放'
            ELSE NULL END status,
            DATE_FORMAT(a.begindate,'%Y-%m-%d %H:%i:%s') begindate,
            a.beginpersonname,
            a.demanddep,
            DATE_FORMAT(a.receiptdate,'%Y-%m-%d') receiptdate,
            a.attr2,
            a.remark
        FROM
            t_apply_order a
        WHERE
            a.status in ('10','11')
            AND a.typeid = #{typeId}
            <if test="depId != null and depId != ''">
                AND a.demanddepid in (${depId})
            </if>
            limit #{index},#{pageSize}
    </select>-->

    <!--通过审批的列表数量-->
    <!--<select id="getPassListCnt" resultType="java.lang.Integer">
        SELECT
            count(1)
        FROM
            t_apply_order a
        WHERE
            a.status in ('10','11')
            AND a.typeid = #{typeId}
            <if test="depId != null and depId != ''">
                AND a.demanddepid in (${depId})
            </if>
    </select>-->

    <!--通过物品id查询物品的当前库存-->
    <select id="getNowStore" resultType="java.util.LinkedHashMap">
        SELECT unitprice,usableamount,outstore,nowstore FROM t_stock WHERE id = #{goodId}
    </select>

    <!--发放库存，修改主表状态-->
    <update id="updateState">
        UPDATE t_apply_order SET status = '11' WHERE orderid = #{orderid}
    </update>

    <!--获取发放记录id-->
    <select id="getRecordId" resultType="java.lang.String">
        SELECT
            id
        FROM
            t_apply_order_approvel a
            INNER JOIN ( SELECT orderid, max( step ) step FROM t_apply_order_approvel GROUP BY orderid ) b ON a.step = b.step
            AND a.orderid = b.orderid
        WHERE
            a.orderid = #{orderid}
    </select>

    <!--发放库存，更新操作人员信息-->
    <update id="updatePersonInfo" parameterType="ApplyOrderApproval">
        UPDATE t_apply_order_approvel
        SET deal_time = #{dealTime},deal_user_id = #{dealUserId},deal_user_name = #{dealUserName}
        WHERE id = #{id}
    </update>

    <!--出库修改库存信息-->
    <update id="updateNowStore" parameterType="Tstock">
        UPDATE t_stock
        SET nowstore = #{nowStore},outstore = #{outStore},allmoney = #{allmoney}
        WHERE id = #{id}
    </update>

    <!--查询库存物品-->
    <select id="getGoodFromStock" resultType="java.util.LinkedHashMap">
        SELECT id,goodname FROM t_stock WHERE (is_del = '0' OR is_del is null) AND parenttypeid = #{typeid}
    </select>

    <!--通过id查询物品详情-->
    <select id="getGoodInfo" resultType="java.util.LinkedHashMap">
        SELECT
            id,
            goodno,
            goodname,
            specs,
            brand,
            storeno,
            IFNULL(unitprice,0) unitprice,
            unit,
            pictureurl,
            IFNULL(expectcount,0) expectcount,
            CASE WHEN usableamount-expectcount>=0 THEN '正常' ELSE '告警' END iswarn
        FROM
            t_stock
        WHERE
            id = #{id}
    </select>
</mapper>