<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.property.mapper.WymaintainorderMapper">
  <resultMap id="BaseResultMap" type="com.property.entity.Wymaintainorder">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="workno" jdbcType="VARCHAR" property="workno" />
    <result column="state" jdbcType="VARCHAR" property="state" />
    <result column="policy" jdbcType="VARCHAR" property="policy" />
    <result column="generationtime" jdbcType="DATE" property="generationtime" />
    <result column="forcetime" jdbcType="DATE" property="forcetime" />
    <result column="personnel" jdbcType="VARCHAR" property="personnel" />
    <result column="receiving" jdbcType="VARCHAR" property="receiving" />
    <result column="armstatus" jdbcType="VARCHAR" property="armstatus" />
  </resultMap>

  <!--    获取维护工单总数-->
  <select id="getMaintainorderCnt" resultType="java.lang.Integer">
    select count(*)
    from (select * from wy_maintainorder) a
    left join (select * from wy_equipmentstrategy) b on b.policyid = a.workno
    <where>
      <if test="policyname != null and policyname != ''">
        AND b.policyname like "%"#{policyname}"%"
      </if>
      <if test="policy != null and policy != '' and policy != 0">
        AND b.policy = #{policy}
      </if>
      <if test="state != null and state != '' and state != 0">
        AND a.state = #{state}
      </if>
      <if test="company != null and company != ''">
        AND b.company = #{company}
      </if>
    </where>
  </select>

  <!--    获取维护工单信息-->
  <select id="getMaintainorder" resultType="java.util.Map">
    select  a.id,
            a.workno,
            b.policyname,
            c.paravalue policy,
            b.planningtime,
            b.planendtime,
            d.paravalue state,
            a.generationtime,
            a.forcetime,
            a.personnel,
            a.receiving
    from (select * from wy_maintainorder) a
    left join (select * from wy_equipmentstrategy) b on b.policyid = a.workno
    left join (select * from sys_parameter where paraname = 'policy') c on b.policy = c.parakey
    left join (select * from sys_parameter where paraname = 'workstate') d on a.state = d.paraorder
    <where>
      <if test="policyname != null and policyname != ''">
        AND b.policyname like "%"#{policyname}"%"
      </if>
      <if test="policy != null and policy != '' and policy != 0">
        AND b.policy = #{policy}
      </if>
      <if test="state != null and state != '' and state != 0">
        AND a.state = #{state}
      </if>
      <if test="company != null and company != ''">
        AND b.company = #{company}
      </if>
    </where>
  </select>

  <!--    获取工单状态下拉框-->
  <select id="getWorkState"  resultType="java.util.Map">
	select parakey id,paravalue text from sys_parameter
    where paraname = 'workstate'
    union
    select 0 as id,'全部' as text from sys_parameter
    order by id
  </select>

  <!--    获取工单详情信息-->
  <select id="getMaintainorderDetails" resultType="java.util.Map">
    select
      a.id,
      a.workno,
      a.generationtime,
      a.state,
      b.policyname,
      c.paravalue policy,
      b.content,
      b.resources,
      b.planningtime,
      a.personnel,
      a.receiving,
      a.forcetime,
      a.operationrecord,
      a.defectidentification,
      a.completiontime
    from (select * from wy_maintainorder) a
    left join (select * from wy_equipmentstrategy) b on b.policyid = a.workno
    left join (select * from sys_parameter where paraname = 'policy') c on b.policy = c.parakey
	<where>
      <if test="id != null and id != ''">
        AND a.id = #{id}
      </if>
    </where>
  </select>

  <!--    修改工单状态信息-->
  <select id="getSingleState" resultType="String">
    select state from wy_maintainorder where id = #{id}
  </select>
  <!-- 修改未派单的信息-->
  <update id="updateSingleOne" parameterType="java.util.Map">
    update wy_maintainorder a,wy_equipmentstrategy b
    set
		b.planningtime = #{planningtime},
		a.forcetime = now(),
		a.receiving = #{receiving},
		a.personnel = #{personnel},
		a.state = #{state}
    where b.policyid = a.id and a.id = #{id}
  </update>
  <!-- 修改已派单的信息-->
  <update id="updateSingleTwo" parameterType="java.util.Map">
    update wy_maintainorder
    set	operationrecord = #{operationrecord},
		defectidentification = #{defectidentification},
		completiontime = #{completiontime},
		state = #{state}
    where id = #{id}
  </update>

  <!--    生成超期订单信息-->
  <update id="updateBeyondOrder" parameterType="java.util.Map">
    update wy_maintainorder
    set armstatus = '3'
    where
     TIMESTAMPDIFF(day,generationtime,NOW()) > '7' and forcetime is null and armstatus is null
  </update>

  <!--    查询超期订单总数-->
  <select id="getBeyondOrderCnt" resultType="java.lang.Integer">
    select count(*)
    from wy_maintainorder
    where armstatus = 3 or armstatus = 2
  </select>

  <!--    查询超期订单信息-->
  <select id="getBeyondOrder" resultType="java.util.Map">
    select
        a.id,
		a.workno,
		b.policyname,
		d.paravalue policy,
		b.planningtime,
		b.content,
		c.paravalue armstatus
    from (select * from wy_maintainorder) a
	left join (select * from wy_equipmentstrategy) b on b.policyid = a.workno
    left join (select * from sys_parameter where paraname = 'armstatus') c on a.armstatus = c.parakey
	left join (select * from sys_parameter where paraname = 'policy') d on b.policy = d.parakey
	where a.armstatus = 3 or a.armstatus = 2
  </select>

  <!--    重新生成超期订单告警-->
  <update id="reOrderAlarm">
    update wy_maintainorder a,wy_equipmentstrategy b
    set b.policyname = #{policyname},
		b.policy = #{policy},
		b.planningtime = #{planningtime},
		b.planendtime = #{planendtime},
		b.content = #{content},
		b.resources = #{resources},
		a.armstatus = #{armstatus}
    where a.workno = b.policyid and a.id = #{id}
  </update>

  <!--    取消超期订单告警-->
  <update id="updateOrderAlarm" parameterType="java.util.Map">
    update wy_maintainorder
    set armstatus = '2'
    where  id = #{id}
  </update>
</mapper>